generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id             String @id @default(auto()) @map("_id") @db.ObjectId
  firstName      String?
  lastName       String?
  name           String?
  email          String? @unique
  phone          String?
  ordersCount    Int?
  hashedPassword String?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  emailVerified  DateTime?
  accounts       Account[]
  addresses      Addresses[]
  orders         Orders[]
  image          String?
  role           Role      @default(USER)
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.String
  access_token      String? @db.String
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.String
  session_state     String?

  userId            String  @db.ObjectId
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Orders {
  id                String @id @default(auto()) @map("_id") @db.ObjectId
  createdAt         DateTime @default(now())
  billingAddress    Addresses
  email             String 
  fulfillmentStatus FulfillmentStatusLabel @default(UNFULFILLED)
  itemCount         Int
  shippingAddress   Addresses
  shippingPrice     Int
  subtotalPrice     Int
  taxPrice          Int
  totalDiscounts    Int?
  totalNetAmount    Int
  totalPrice        Int
  userId            String @db.ObjectId
  user              User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
}

type Addresses {
  address1          String
  address2          String 
  city              String
  country           String
  countryCode       String
  firstName         String
  lastName          String
  fullName          String
  phone             String
  street            String
  userId            String
  
}
enum FulfillmentStatusLabel {
  COMPLETE  
  FULFILLED
  PARTIAL
  RESTOCKED
  UNFULFILLED 
}



